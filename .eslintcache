[{"/Users/martyb/Documents/Projects/acheron-front/src/reportWebVitals.js":"1","/Users/martyb/Documents/Projects/acheron-front/src/data.js":"2","/Users/martyb/Documents/Projects/acheron-front/src/App.js":"3","/Users/martyb/Documents/Projects/acheron-front/src/Stocks.js":"4","/Users/martyb/Documents/Projects/acheron-front/src/index.js":"5"},{"size":362,"mtime":1606720029000,"results":"6","hashOfConfig":"7"},{"size":1280,"mtime":1608417363080,"results":"8","hashOfConfig":"7"},{"size":11507,"mtime":1608452277399,"results":"9","hashOfConfig":"7"},{"size":4594,"mtime":1608420335270,"results":"10","hashOfConfig":"7"},{"size":500,"mtime":1607741302730,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16y1fii",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/martyb/Documents/Projects/acheron-front/src/reportWebVitals.js",[],"/Users/martyb/Documents/Projects/acheron-front/src/data.js",[],"/Users/martyb/Documents/Projects/acheron-front/src/App.js",[],"/Users/martyb/Documents/Projects/acheron-front/src/Stocks.js",["23","24","25","26","27"],"import React, { Component, useState } from \"react\";\nimport { initialStockData } from \"./data\";\n\nexport default class Stocks extends Component {\n\n  constructor(props){\n    super(props);\n  }\n\n  render() {\n\n    this.state = getStock();\n\n    return (\n      <div>\n        <input></input>\n        <button id='getStockButton' onClick={getStock}>Get data</button>\n        <br/>\n        <div className=\"stock-container\">\n          {this.state[\"stockData\"].map((data, key) => {\n            return (\n              <div key={key}>\n                <Stock\n                  key={key}\n                  code={data.code}\n                  isin_code={data.isin_code}\n                  desc_full={data.desc_full}\n                  last_price={data.last_price}\n                  open_price={data.open_price}\n                  day_high_price={data.day_high_price}\n                  day_low_price={data.day_low_price}\n                  change_price={data.change_price}\n                  change_in_percent={data.change_in_percent}\n                  volume={data.volume}\n                  bid_price={data.bid_price}\n                  offer_price={data.offer_price}\n                  previous_close_price={data.previous_close_price}\n                  previous_day_percentage_change={data.previous_day_percentage_change}\n                  year_high_price={data.year_high_price}\n                  last_trade_date={data.last_trade_date}\n                  year_high_date={data.year_high_date}\n                  year_low_price={data.year_low_price}\n                  year_low_date={data.year_low_date}\n                  year_open_price={data.year_open_price}\n                  year_open_date={data.year_open_date}\n                  year_change_price={data.year_change_price}\n                  year_change_in_percentage={data.year_change_in_percentage}\n                  pe={data.pe}\n                  eps={data.eps}\n                  year_change_in_percentage={data.average_daily_volume}\n                  annual_dividend_yield={data.annual_dividend_yield}\n                  market_cap={data.market_cap}\n                  number_of_shares={data.number_of_shares}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n}\n\n\nconst getStock = () => {\n\n  fetch('https://www.asx.com.au/asx/1/share/ASX'\n  ,{\n    headers : { \n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    }\n  }\n  ).then(function(response){\n      //console.log(response)\n      return response.json();\n    }).then(function(myJson) {\n      //console.log(myJson);\n      this.setState({ \"stockData\": myJson });\n    });\n}\n\nconst Stock = ({code, isin_code, desc_full, open_price, day_high_price, day_low_price, change_price, change_in_percent, volume, bid_price, offer_price, previous_close_price, previous_day_percentage_change, year_high_price, last_trade_date, year_high_date, year_low_price, year_low_date, year_open_price, year_open_date, year_change_price, year_change_in_percentage, eps, annual_dividend_yield, market_cap, number_of_shares, last_price, pe, average_daily_volume}) => {\n  if (!code) return <div />;\n  return (\n        <div>\n          <div>Code: {code}</div>\n          <div>ISIN code: {isin_code}</div>\n          <div>Desc: {desc_full}</div>\n          <div>Last price: {last_price}</div>\n          <div>Open: {open_price}</div>\n          <div>Day high: {day_high_price}</div>\n          <div>Day low: {day_low_price}</div>\n          <div>Change: {change_price}</div>\n          <div>Change %: {change_in_percent}</div>\n          <div>Volume: {volume}</div>\n          <div>Bid: {bid_price}</div>\n          <div>Offer: {offer_price}</div>\n          <div>Prev close: {previous_close_price}</div>\n          <div>Prev day % chg: {previous_day_percentage_change}</div>\n          <div>Last trade date: {last_trade_date}</div>\n          <div>Year high: {year_high_price}</div>\n          <div>Year high date: {year_high_date}</div>\n          <div>Year low: {year_low_price}</div>\n          <div>Year low date: {year_low_date}</div>\n          <div>Year open: {year_open_price}</div>\n          <div>Year open date: {year_open_date}</div>\n          <div>Year change: {year_change_price}</div>\n          <div>Year change %: {year_change_in_percentage}</div>\n          <div>PE: {pe}</div>\n          <div>EPS: {eps}</div>\n          <div>Avg daily volume: {average_daily_volume}</div>\n          <div>Annual dividen yield: {annual_dividend_yield}</div>\n          <div>Market cap: {market_cap}</div>\n          <div>Number of shares: {number_of_shares}</div>\n        </div> \n  );\n}","/Users/martyb/Documents/Projects/acheron-front/src/index.js",[],{"ruleId":"28","severity":1,"message":"29","line":1,"column":28,"nodeType":"30","messageId":"31","endLine":1,"endColumn":36},{"ruleId":"28","severity":1,"message":"32","line":2,"column":10,"nodeType":"30","messageId":"31","endLine":2,"endColumn":26},{"ruleId":"33","severity":1,"message":"34","line":6,"column":3,"nodeType":"35","messageId":"36","endLine":8,"endColumn":4},{"ruleId":"37","severity":1,"message":"38","line":12,"column":5,"nodeType":"39","endLine":12,"endColumn":9},{"ruleId":"40","severity":1,"message":"41","line":50,"column":19,"nodeType":"42","endLine":50,"endColumn":72},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'initialStockData' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute"]